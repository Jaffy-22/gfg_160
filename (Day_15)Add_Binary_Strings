/*
Given two binary strings s1 and s2 consisting of only 0s and 1s. Find the resultant string after adding the two Binary Strings.
Note: The input strings may contain leading zeros but the output string should not have any leading zeros.

Example:
Input: s1 = "1101", s2 = "111"
Output: 10100
Explanation:
 1101
+ 111
10100

Input: s1 = "00100", s2 = "010"
Output: 110
Explanation: 
  100
+  10
  110
*/
class Solution {
    public String addBinary(String s1, String s2) {
        // code here
        int carry=0;
        int i = s1.length() - 1;
        int j = s2.length() - 1;
        StringBuilder str = new StringBuilder();
        while (i >= 0 || j >= 0 || carry != 0) 
        {
            int num1 = i >= 0 ? s1.charAt(i) - '0' : 0;
            int num2 = j >= 0 ? s2.charAt(j) - '0' : 0;
            int tot = num1 + num2 + carry;
            str.append(tot % 2); 
            carry = tot / 2; 
            i--;
            j--;
        }
        int len=str.length()-1;
        while(len>=0 && str.charAt(len)=='0')
        {
            str.deleteCharAt(len);
            len--;
        }
        return str.reverse().toString();
    }
}
