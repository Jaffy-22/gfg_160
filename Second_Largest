/*Given an array of positive integers arr[], return the second largest element from the array. If the second largest element doesn't exist then return -1.
Note: The second largest element should not be equal to the largest element.

Examples:
Input: arr[] = [12, 35, 1, 10, 34, 1]
Output: 34
Explanation: The largest element of the array is 35 and the second largest element is 34.

Input: arr[] = [10, 5, 10]
Output: 5
Explanation: The largest element of the array is 10 and the second largest element is 5.

Input: arr[] = [10, 10, 10]
Output: -1
Explanation: The largest element of the array is 10 and the second largest element does not exist.
*/
class Solution {
    public int getSecondLargest(int[] arr) {
        // Code Here
        if (arr == null || arr.length < 2) {
            return -1; 
        }
        Arrays.sort(arr);
        int secondLargest = -1;
        int  len = arr.length;
        int i=len - 1;
        while (i>=1) {
            if (arr[i] == arr[i -1])
                i--; 
            else {
                secondLargest = arr[i - 1];
                break;
            }
        }
        return secondLargest;
    }
}
