/*
You are given an integer array arr[]. Your task is to find the smallest positive number missing from the array.
Note: Positive number starts from 1. The array can have negative integers too.

Examples:
Input: arr[] = [2, -3, 4, 1, 1, 7]
Output: 3
Explanation: Smallest positive missing number is 3.

Input: arr[] = [5, 3, 2, 5, 1]
Output: 4
Explanation: Smallest positive missing number is 4.

Input: arr[] = [-8, 0, -1, -4, -3]
Output: 1
Explanation: Smallest positive missing number is 1.
*/
Approach 1:
Time  Complaxity: O(n log n)
Space Complexity: O(1)
class Solution {
    // Function to find the smallest positive number missing from the array.
    public int missingNumber(int[] arr) {
        // Your code here
        int min=1;
        Arrays.sort(arr);//1 2 3 5 5 
        for(int i=0;i<arr.length-1;i++)
        {
            if(arr[i]==min)
                  min++;
        }
        if(min==arr[arr.length-1])
            min++;
        return min;
    }
}
-------------------------------------------------------------------------------------
Approach 2:
Time  Complaxity: O(n)
Space Complexity: O(n)
class Solution {
    // Function to find the smallest positive number missing from the array.
    public int missingNumber(int[] arr) {
        // Your code here
        int min=1;
        HashSet<Integer> set = new HashSet<>();
        for(int num:arr)
            set.add(num);
        while (set.contains(min)) {
            min++;
        }
        return min;
    }
}
--------------------------------------------------------------------------------------
Approach 3:
Time  Complaxity: O(n)
Space Complexity: O(1)
class Solution {
    // Function to find the smallest positive number missing from the array.
    public int missingNumber(int[] arr) {
        // Your code here
        //Orginal Array 2 -3 4 1 1 7
        int n=arr.length;
        for(int i=0;i<n;i++)
        {
            if(arr[i]<0)
                arr[i]=0;
        }
        //After 1st Loop  1 2 3 4 5 
        for(int i=0;i<n;i++)
        {
            int value=Math.abs(arr[i]);
            if(value >=1 && value<=n)
            {
                if(arr[value-1]>0)
                    arr[value-1]*=-1;
                else if(arr[value-1]==0)
                    arr[value-1]=-1*(n+1);
            }
        }
        //After 2nd Loop  1 2 3 4 5 
        for(int i=0;i<n;i++)
        {
            if(arr[i]>=0)
                return i+1;
        }
        return n+1;
    }
}
-----------------------------------------------------------------------------------
