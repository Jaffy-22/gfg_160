/*
Given an unsorted array arr[]. Rotate the array to the left (counter-clockwise direction) by d steps, where d is a positive integer. Do the mentioned change in the array in place.
Note: Consider the array as circular.

Examples :
Input: arr[] = [1, 2, 3, 4, 5], d = 2
Output: [3, 4, 5, 1, 2]
Explanation: when rotated by 2 elements, it becomes 3 4 5 1 2.

Input: arr[] = [2, 4, 6, 8, 10, 12, 14, 16, 18, 20], d = 3
Output: [8, 10, 12, 14, 16, 18, 20, 2, 4, 6]
Explanation: when rotated by 3 elements, it becomes 8 10 12 14 16 18 20 2 4 6.

Input: arr[] = [7, 3, 9, 1], d = 9
Output: [3, 9, 1, 7]
Explanation: when we rotate 9 times, we'll get 3 9 1 7 as resultant array.
*/
Approach 1
------------------------------------------------------------------------------
class Solution {
    // Function to rotate an array by d elements in counter-clockwise direction.
    static void rotateArr(int arr[], int d) {
        // add your code here
        int rotate=d%arr.length;
        int[] rotateArr= new int[arr.length];
        int index=0;
        for(int i=rotate;i<arr.length;i++)
            rotateArr[index++]=arr[i];
        for(int i=0;i<rotate;i++)
            rotateArr[index++]=arr[i];
        for (int i = 0; i < arr.length; i++) {
            arr[i] = rotateArr[i];
        }
    }
}

Approach 2
------------------------------------------------------------------------------
class Solution {
    // Function to rotate an array by d elements in counter-clockwise direction
    static void rotateArr(int arr[], int d) {
        int n = arr.length;
        d = d % n;
        int left=0,right=n-1;
        while(left<=right)
        {
            int temp=arr[left];
            arr[left]=arr[right];
            arr[right]=temp;
            left++;
            right--;
        }
        left=0;
        right=n-d-1;
        while(left<=right)
        {
            int temp=arr[left];
            arr[left]=arr[right];
            arr[right]=temp;
            left++;
            right--;
        }
        
        left=n-d;
        right=n-1;
        while(left<=right)
        {
            int temp=arr[left];
            arr[left]=arr[right];
            arr[right]=temp;
            left++;
            right--;
        }
    }
}
